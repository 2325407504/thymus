<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<head th:replace="frags/head :: header">
<meta charset="utf-8" />
<style type="text/css">
#loadThymus {
	position: absolute;
	margin: 0;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	color: #fff;
	font-weight: bolder;
	background-color: #777;
	z-index: 5000;
	font: 100% sans-serif, 'Helvetica Neue', Helvetica, Arial;
}
#loadThymus>div {
	position: absolute;
	width: 300px;
	height: 50px;
	margin: -150px 0 0 -150px;
	left: 50%;
	top: 50%;
}
#loadThymusText {
	text-align: center;
	vertical-align: baseline;
	line-height: 50px;
	z-index: 5002;
}
#loadThymusProg {
	background-color: #333;
}
#loadThymusProgPer {
	display: inline-block;
	width: 1%;
	height: 100%;
	background-color: #6593B5;
	z-index: 5001;
}
</style>
<script type="text/javascript">
	function fragComplete() {
		this.event.log();
		// loading indicator
		var $lt = $('#loadThymus');
		if (this.event.fragCount == this.event.fragCurrTotal) {
			$lt.css('display', 'none');
		} else {
			var p = Math
					.round((this.event.fragCount / this.event.fragCurrTotal) * 100)
					+ '%';
			var $pb = $lt.find('#loadThymusText');
			$pb.text(p);
			$('#loadThymusProgPer').css('width', p);
		}
	}
	function handleReadme() {
		var h = this.handle;
		// get rid of text not wrapped in an HTML node or anchors 
		// from the read me mark down
		if (h.fragUrl.indexOf('README') > 0) {
			$(this.event.source).contents().filter(
					function() {
						return this.nodeType === 3 || this.tagName == 'a'
								|| this.tagName == 'A';
					}).remove();
		}
	}
</script>
<!-- Thymus script -->
<script th:remove="all" src="js/thymus.js" id="thymusScript"
	data-thx-context-path="." data-thx-frag-extension="inherit"
	data-thx-head-frag="th:replace=frags/head :: header"
	data-thx-onfragscomplete="init()" 
	data-thx-onfragcomplete="fragComplete()"></script>
</head>
<body>
	<div id="loadThymus">
		<div id="loadThymusText">
			0%
		</div>
		<div id="loadThymusProg">
			<div id="loadThymusProgPer"></div>
		</div>
	</div>
	<div th:replace="frags/nav/nav :: topnav"></div>
	<div class="container app-scroll">
		<div id="docs" class="app-scroll-nav">
			<ul class="nav navbar-inverse">
				<li><a th:title="#{about}"
					class="app-tooltip-bottom" title="About/Download" href="#about"><i
						class="icon-leaf"></i></a></li>
				<li><a th:title="#{features}"
					class="app-tooltip-bottom" title="Features" href="#features"><i
						class="icon-check"></i></a></li>
				<li><a th:title="#{usage}"
					class="app-tooltip-bottom" title="Usage" href="#usage"><i
						class="icon-code"></i></a></li>
				<li><a th:title="#{paths}"
					class="app-tooltip-bottom" title="Path Resolution" href="#paths"><i
						class="icon-link"></i></a></li>
				<li><a th:title="#{thymeleaf}"
					class="app-tooltip-bottom" title="Thymeleaf Integration" href="#thymeleaf"><i
						class="icon-cloud"></i></a></li>
			</ul>
		</div>
		<section
			data-spy="scroll" data-target="#docs" data-offset="0"
			class="scroll-spy">
			<div id="about" class="panel panel-default">
				<div class="panel-heading">
					<span class="icon-stack icon-3x"> <i
						class="icon-sign-blank icon-light icon-stack-base"></i> <i
						class="icon-leaf icon-thymus-stacked"></i> <i
						class="icon-thymus-text-dark">Thymus</i>
					</span>
					<div class="pull-right">
						<a href="https://github.com/ugate/thymus/tarball/master"><span
							class="icon-stack icon-3x"> <i
								class="icon-folder-close icon-stack-base"></i><i
								class="icon-light icon-text">tar.gz</i>
						</span></a>
						<a href="https://github.com/ugate/thymus/zipball/master"><span
							class="icon-stack icon-3x"> <i
								class="icon-folder-close icon-stack-base"></i> <i
								class="icon-light icon-text">.zip</i>
						</span></a>
					</div>
				</div>
				<div class="panel-body">
					<p th:replace="README.md :: handleReadme()">
						<b>thymus.js</b>
					</p>
					<p>
						Internally, it dynamically loads the JQuery API (configurable) and
						uses <a href="http://api.jquery.com/jQuery.get/">JQuery
							$.get(...) calls</a> to retrieve and insert fragments into pages. The
						process is similar to how <a href="http://api.jquery.com/load/">JQuery
							$.load(...) works with page fragments</a> with a few added benefits.
						<b>thymus.js</b> will automatically insert fragments into a page
						using HTML5 data attributes and will update any relative
						<code>src</code>
						/
						<code>href</code>
						URLs within returned fragments to point to the proper path before
						insertion. It also supports nested fragments that may reside in
						other fragments. <a href="#features">Click here</a> for a full
						list of features.
					</p>
					<p>
						This site actually uses <b>thymus.js</b> templates to resolve
						fragments for the top navigation bar, bottom navigation bar,
						example user profile drop down menu, page head and scripts. So,
						feel free to explore :)
					</p>
					<div class="panel panel-default">
						<div class="panel-heading">Requirements</div>
						<div class="panel-body">
							<ul>
								<li><a href="https://github.com/jquery/jquery">JQuery
										&gt;= 1.9.1</a> (see <a href="#attrs">JQuery URL attribute</a>)</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div id="features" class="panel panel-default">
				<div class="panel-heading">
					<h2>
						Features
					</h2>
				</div>
				<div class="panel-body app-code">
					<ul>
						<li>Automatic fragment <i>inclusion</i> while a page loads
						</li>
						<li>Automatic fragment <i>replacement</i> while a page loads
						</li>
						<li>Automatic fragment <a href="#attrpaths"><code>src</code>/<code>href</code>
								resolution for relative paths</a>
						</li>
						<li>Multiple fragment definitions at the same fragment URL</li>
						<li>Prevents repetitive calls to the same URL associated with
							raw JQuery.load content (typical case when multiple fragments
							reside at the same URL)</li>
						<li><a href="#selfref">Self-Referencing templates</a></li>
						<li>Relatively infinite <a href="#nestedfrags">nesting of
								fragments</a> (fragments within fragments)
						</li>
						<li><a href="#headfrags"><code>head</code> tag fragments</a></li>
						<li>Ability to override the processing of fargment results
							via function</li>
						<li>Automatic fragment loading or <a href="#deferred">deferred
								fragment loading</a></li>
						<li>Fragment events dispatched for each resource has been
							loaded or failed to load (including scripts and nested fragments)</li>
						<li>Fragment event dispatched when all fragments have been
							loaded or failed to load (including scripts and nested fragments)</li>
					</ul>
				</div>
			</div>
			<div id="usage" class="panel panel-default">
				<div class="panel-heading">
					<h2>
						Usage
					</h2>
				</div>
				<div class="panel-body app-code">
					<p>
						To use <b>thymus.js</b> it obviously needs to be included in the
						page. Here is the minimal setup:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- Thymus script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span> <span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>
					<p>
						There are two required <b>thymus.js</b> attributes. The
						<code>thymusScript</code>
						id is used to identify the <b>thymus.js</b> script in order to
						capture various attribute options on the script tag while the
						<code>data-thx-context-path</code>
						is used for <a href="#fragpath">fragment path resolution</a> and <a
							href="#attrpaths">attribute path resolution</a>. It should point
						to the root context of the application relative to the page in
						which <b>thymus.js</b> is loaded.
					</p>
					<p>
						Fragments are simply defined using the
						<code>data-thx-fragment</code>
						attribute and assigning a unique fragment name/target to its
						value. The fragment can then be used as either a replacement or
						inclusion anywhere a
						<code>data-thx-replace</code>
						or
						<code>data-thx-include</code>
						attribute is found that contains matching fragment name/target.
						Each
						<code>data-thx-replace</code>
						/
						<code>data-thx-include</code>
						attribute contains two parts that are separated by a "<b>::</b>"
						(the separator can be overridden using the
						<code>data-thx-separator</code>
						attribute on the <b>thymus.js</b> script definition). The first
						part is the URL and should point to the fragment content that will
						be loaded. The second part defines the fragment name/target that
						should be included or replaced with the returned result of the URL
						(see the <a href="#paths">Path Resolution</a> section for details
						on how URLs are resolved and for fragment name options). The site
						you are viewing uses the following fragment for the top navigation
						bar that points to a URL <b>frags/nav/nav</b> and fragment called
						<b>topnav</b>.
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/nav/nav&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-replace=</span><span style="color: #0000FF">&quot;frags/nav/nav :: topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<p>
						Of course, we could have also used a
						<code>data-thx-include</code>
						instead of
						<code>data-thx-replace</code>
						which would have appended the fragment rather than replacing the
						placeholder:
					</p>
<div style=" overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/nav/nav&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/nav/nav :: topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;span&gt;</span>Top Nav<span style="color: #000080; font-weight: bold">&lt;/span&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/nav/nav :: topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;span&gt;</span>Top Nav<span style="color: #000080; font-weight: bold">&lt;/span&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<p id="selfref">
						Templates can also refer to fragments that exist in the same page
						they are included/replaced in by using
						<code>this</code>
						or omitting the URL altogether (e.g.
						<code>data-thx-include="::selfTemp"</code>
						).
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- a page with --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;this :: selfTemp&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;selfTemp&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would produce --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;this :: selfTemp&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;selfTemp&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;selfTemp&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
					<h4 id="deferred">Deferred Fragment Loading</h4>
					<p>
						By default <b>thymus.js</b> loads fragments when the DOM is ready
						to be parsed. To defer <b>thymus.js</b> from load loading until a
						later time, just add
						<code>data-thx-deferred-load="true"</code>
						to the <b>thymus.js</b>
						<code>script</code>
						declaration. Loading <b>thymus.js</b> after defferment can be
						accomplished by executing <strong><code>Thymus.load();</code></strong>
						(should only be called once per page). Loading <b>thymus.js</b>
						fragments manually using a <a
							href="http://api.jquery.com/category/selectors/">JQuery
							selector</a> can be done at any time by calling
						<code>Thymus.loadFragments(jqSelector);</code>
						(where <i>jqSelector</i> is the JQuery selector for the DOM
						elements that will contain possible <b>thymus.js</b> template
						definitions).
					</p>
					<h3 id="nestedfrags">Multi-Level Nested Fragments</h3>
					<p>
						Not only can fragments be <i>included</i> or <i>replaced</i>
						within a page, but the fragments themselves can load other
						fragments (the number of levels of fragments within fragments can
						be relatively endless). Just like normal fragments, each neseted
						fragment will be processed asynchronously from its parent
						fragment. This ensures that as a new fragment is discovered it
						will be loaded and its content made available for any subsequent
						fragments that are encountered that point to the same URL. It also
						prevents unecessary calls for fragment content that may have more
						than one fragment definition. The <i>Guest User</i> dropdown menu
						in the top navigation bar illustrates the use of nested fragments.
						When the <b>frags/nav/nav</b> fragment was encountered for the <b>topnav</b>
						fragment it discovered a
						<code>data-thx-replace</code>
						within the results and proceeded to load <b>frags/user/user</b>
						for the <b>user</b> fragment and loaded it into its parent
						fragment. To illustrate this concept consider the following:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/nav/nav&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-replace=</span><span style="color: #0000FF">&quot;frags/user/user :: user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and assume a resource resides at &quot;frags/nav/user&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-replace=</span><span style="color: #0000FF">&quot;frags/nav/nav :: topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<h3 id="headfrags">Head Fragments</h3>
					<p>
						Almost every browser removes
						<code>head</code>
						attributes when parsing an HTML DOM. So, the <b>thymus.js</b>
						script definition needs to have an additional attribute to handle
						<code>head</code>
						fragment inclusions (replcacements are treated the same as
						includes for
						<code>head</code>
						tags). If the browser doesn't strip out the
						<code>data-thx-include</code>
						on the
						<code>head</code>
						tag it will be used. Otherwise, an attempt will be made to capture
						<code>data-thx-head-frag</code>
						as in the following example:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;head</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/head :: header&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- Thymus script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span>
	<span style="color: #FF0000">data-thx-head-frag=</span><span style="color: #0000FF">&quot;data-thx-include=frags/head :: header&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>
					<p>
						Although this duplicates the inclusion defintion it does provide
						for cross-browser support. If this redundency disrupts your inner
						chi you can ommit the
						<code>data-thx-include</code>
						attribute from the
						<code>head</code>
						tag and the
						<code>data-thx-head-frag</code>
						will still be picked up.
					</p>
					<h3 id="scriptfrags">Script Fragments</h3>
					<p>
						<code>script</code>
						tags will be inserted individually in the order they are defined
						within a fragment. Just like any other fragments that are loaded
						<code>script</code>
						tags found within a fragment will also fire a <a
							href="#fragcomplete">fragment loaded event</a> for each script
						that is loaded within the fragment destination. Multiple
						<code>script</code>
						tags can be wrapped in a parent node (like the following), but
						each of them will still fire their own <a href="#fragcomplete">fragment
							loaded event</a> individually.
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/script&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;h1&gt;</span>Never Rendered (outside fragment)<span style="color: #000080; font-weight: bold">&lt;/h1&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;scripts&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;//code.jquery.com/jquery.min.js&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/app.js&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;data:text/javascript,function tst(m){alert(m)}&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;h1&gt;</span>My Page<span style="color: #000080; font-weight: bold">&lt;/h1&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-replace=</span><span style="color: #0000FF">&quot;frags/script :: scripts&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;h1&gt;</span>My Page<span style="color: #000080; font-weight: bold">&lt;/h1&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;scripts&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;script&gt;function</span> tst(m){alert(m)}<span style="color: #000080; font-weight: bold">&lt;/script&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<p>
						Due to the nature of dynamically loaded scripts they may be difficult to debug 
					</p>
					<div class="alert alert-info">
						<strong>Note:</strong> You may have noticed that the
						<code>script</code>
						tags that are defined in the <b>scripts</b> fragment that have a
						normal URL
						<code>src</code>
						are not present in the resulting <i>replacement</i>. This is
						because there is nothing to <i>include</i>/<i>replace</i> in the
						DOM. However, any
						<code>script</code>
						that is inlined or contains a
						<code>src</code>
						with a
						<code>data:text/javascript,</code>
						will appear in the resulting DOM.
					</div>
					<div class="alert alert-success">
						<strong>Tip:</strong> To make it easier to debug
						<code>script</code>
						that is dynamically loaded by <b>thymus.js</b> include a
						<code>//# sourceURL=path/to/app.js</code>
						at the end of its source file. Some browsers like <a
							href="https://developers.google.com/chrome-developer-tools/docs/javascript-debugging?#source-maps">Google
							Chrome</a> will interperate the comment as a source mapping that will
						identify the
						<code>script</code>
						in the debugger.
					</div>
					<h3 id="fragcomplete">Fragment Complete Events</h3>
					<p>
						After each time an attempt to load a fragment is made a <b>fragment
							complete event</b> is fired. Also, each
						<code>script</code>
						tag within a fragment will also fire its own <b>fragment
							complete event</b>. Event propagation is linear and non-cancellable
						and therefore, can only be defined on the <b>thymus.js</b> tag
						itself using the
						<code>data-thx-onfragcomplete</code>
						attribute.
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text/javascript&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">function</span> fragComplete() {
			<span style="color: #000080; font-weight: bold">var</span> event = <span style="color: #000080; font-weight: bold">this</span>.event;
			<span style="color: #008800; font-style: italic">// handle event</span>
		}
	<span style="color: #000080; font-weight: bold">&lt;/script&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span> <span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span>
		<span style="color: #FF0000">data-thx-onfragcomplete=</span><span style="color: #0000FF">&quot;fragComplete()&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>
					<p>
						In the example above a
						<code>function</code>
						called <i>fragComplete</i> is defined as the
						<code>data-thx-onfragcomplete</code>
						. Every time an attempt is made to load a fragment and a response
						is returned the <i>window.fragComplete</i> function will be
						called. Within the
						<code>function</code>
						,
						<code>this.event</code>
						will reference a <a href="#fragcompleteevent">fragment
							complete event</a>. Supplied functions can contain additional
						argument values by adding them to the function signature (e.g.
						<code>data-thx-onfragcomplete="fragComplete('myValue')"</code>
						). The <a href="#fragcompleteevent">fragment complete event</a>
						contains the following properties:
					</p>
					<div id="fragcompleteevent" class="panel panel-default">
						<div class="panel-heading">
							<h2>Fragment Complete Event</h2>
						</div>
						<div class="panel-body">
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>fragUrl</code>
								</div>
								<div class="col-md-10">the URL of the fragment that an
									attempt was made to load</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>fragTarget</code>
								</div>
								<div class="col-md-10">
									either the value used in a
									<code>data-thx-fragment</code>
									, <a href="http://api.jquery.com/category/selectors/">JQuery
										selector</a> used to select the fragment or the
									<code>function</code>
									called that handled the processing of the fragment
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>fragCount</code>
								</div>
								<div class="col-md-10">the number of total fragments load
									attempts</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>fragCurrTotal</code>
								</div>
								<div class="col-md-10">the current number of total
									fragments that will or have had an attempt to load (may grow as
									new script tags or nested fragments are discovered)</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>source</code>
								</div>
								<div class="col-md-10">
									the DOM node that was included/replaced or the parent node
									when the fragment was not HTML content or outer HTML string
									when the fragment was a
									<code>script</code>
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>scope</code>
								</div>
								<div class="col-md-10">
									the DOM node for which the fragment was loaded under (typically
									this will be the
									<code>html</code>
									node unless the fragment has been loaded manually via a
									different node)
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>error</code>
								</div>
								<div class="col-md-10">the Error object (if the fragment
									loaded successfully error will be null)</div>
							</div>
						</div>
					</div>
					<div class="alert alert-warning">
						<strong>Reminder!</strong> Keep in mind the
						<code>function</code>
						defined as the
						<code>data-thx-onfragcomplete</code>
						must be available for execution at the time that the fragment
						event received.<br />
						<br /> <strong>Warning:</strong> <a href="#fragcompleteevent">fargment
							complete events</a> are not inteded to be used to manipulate/massage
						incoming fragment content. This can be achieved by using <a
							href="#funcfrags">a <code>function</code> as the fragment
							target
						</a>.
					</div>
					<h3 id="fragscomplete">Fragments Complete Events</h3>
					<p>
						Similar to <a href="#fragcomplete">fragment complete events</a>, a
						<a href="#fragscompleteevent">fragments complete event</a> will be
						fired once an attempt to load all of the fragments/
						<code>script</code>
						/etc. has been made. Event propagation is linear and
						non-cancellable and therefore, can only be defined on the <b>thymus.js</b>
						tag itself using the
						<code>data-thx-onfragscomplete</code>
						attribute.
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- Thymus script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span> <span style="color: #FF0000">data-thx-frag-extension=</span><span style="color: #0000FF">&quot;.htm&quot;</span>
	<span style="color: #FF0000">data-thx-onfragscomplete=</span><span style="color: #0000FF">&quot;done()&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>
					<p>
						In the example above a
						<code>function</code>
						called <i>done</i> is defined as the
						<code>data-thx-onfragscomplete</code>
						. Once an attempt is made to load all the defined
						fragment/scripts/nested fragments and a response is returned for
						each of them the example <i>window.done</i>
						<code>function</code>
						will be called with
						<code>this.event</code>
						referencing a <a href="#fragscompleteevent">fragments complete
							event</a>. Supplied functions can contain additional argument values
						by adding them to the function signature (e.g.
						<code>data-thx-onfragscomplete="done('myValue')"</code>
						). The <a href="#fragscompleteevent">fragments complete event</a>
						contains the following properties:
					</p>
					<div id="fragscompleteevent" class="panel panel-default">
						<div class="panel-heading">
							<h2>Fragments Complete Event</h2>
						</div>
						<div class="panel-body">
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>fragCount</code>
								</div>
								<div class="col-md-10">the total number of fragments that
									were attempted to load (including nested fragments and scripts)</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>scope</code>
								</div>
								<div class="col-md-10">
									the DOM node for which the fragments were loaded under
									(typically this will be the
									<code>html</code>
									node unless the fragments have been loaded manually via a
									different node)
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>errors</code>
								</div>
								<div class="col-md-10">a comma delimited string of
									detailed error messages (if all fragments loaded successfully,
									errors will be empty)</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div id="paths" class="panel panel-default">
				<div class="panel-heading">
					<h2>
						Path Resolution
					</h2>
				</div>
				<div class="panel-body app-code">
					<h3 id="fragpath">Fragment Path Resolution</h3>
					<p>
						Because <b>thymus.js</b> runs on the client it's not inheriently
						application context aware. Therefore, <b>thymus.js</b> uses a
						configurable
						<code>data-thx-context-path</code>
						attribute on the <b>thymus.js</b> script tag. It's value
						establishes the path to the root context of the application that
						will be resolved along with the fragment's inclusion URL. Fragment
						definitions can point to resources with different path levels. So,
						it's imporant that the
						<code>data-thx-context-path</code>
						synchronizes with the path defined within the fragment. For
						example, a fragment that resides in <b>example.com/my-app/frags/nav.htm</b>
						may also be included in <b>example.com/my-app/index.htm</b> as
						well as <b>example.com/my-app/user/info.htm</b>. If the fragment
						is defined something like:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
					<p>
						And both <b>example.com/my-app/index.htm</b> and <b>example.com/my-app/user/info.htm</b>
						contain a corresponding include (or replacement):
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/nav/nav :: topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
					<p>
						Then the <b>thymus.js</b> script definitions would be as follows:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- example.com/my-app/index.htm --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span> <span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>

<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- example.com/my-app/user/info.htm --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span><span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;../&quot;</span> <span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>
					<p>
						Notice that in both resources the
						<code>data-thx-context-path</code>
						points to <b>example.com/my-app</b> with <b>my-app</b> being the
						root context (<b>example.com/my-app/index.htm</b> uses <b>"."</b>
						which infers the current path; which would be <b>example.com/my-app/</b>
						while <b>example.com/my-app/user/info.htm</b> uses <b>"../"</b>
						which infers one directory up; which would be <b>example.com/my-app/</b>).
						This vasly simplifies fragment path resolution (escpecially for
						nested fragments) and ensures that all fragment
						inclusion/replacement paths are relative to the root context path
						of the application. It also permits the use of the same paths to
						exist in
						<code>data-thx-include</code>
						or
						<code>data-thx-replace</code>
						attributes; regardless of where the page that defines it resides.
					</p>
					<h4 id="fileextensions">Fragment File Extensions</h4>
					<p>
						File extensions in fragment URLs are optional (and sometimes
						undesirable). That's why <b>thymus.js</b>, by default, will use
						the URL defined in
						<code>data-thx-include</code>
						or
						<code>data-thx-replace</code>
						per verbatim unless a
						<code>data-thx-frag-extension</code>
						is defined. If a
						<code>data-thx-frag-extension</code>
						attribute is defined on the <b>thymus.js</b>
						<code>script</code>
						it will use the
						<code>data-thx-frag-extension</code>
						value as the file extension and will appened it to any fragment
						URLs that do not already have a file extension (should typically
						be prefixed with a period). Any fragment URLs that have their own
						file extension will not get the
						<code>data-thx-frag-extension</code>
						appended their fragment URLs. A special value of <b>inherit</b>
						can be used if fragments should inherit the parent page file
						extension (if any). Here are a few variations:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume the following script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span> <span style="color: #FF0000">data-thx-frag-extension=</span><span style="color: #0000FF">&quot;.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the following includes/replacements --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.xml :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.htm :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.xml :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>

<span style="color: #008800; font-style: italic">&lt;!-- assume the following script is loaded into a page at path/to/page.html --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span> <span style="color: #FF0000">data-thx-frag-extension=</span><span style="color: #0000FF">&quot;inherit&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the following includes/replacements --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.xml :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.html :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.xml :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>

<span style="color: #008800; font-style: italic">&lt;!-- assume the following script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the following includes/replacements --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.xml :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/person.xml :: data&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
</pre></div>
					<h3 id="attrpaths">Attribute Path Resolution</h3>
					<p>
						As with <a href="#fragpath">Fragment Path Resolution</a>, relative
						URLs within fragments are resolved to their absolute URL
						counterparts relative to the root context of the application as
						defined by the
						<code>data-thx-context-path</code>
						on the <b>thymus.js</b>
						<code>script</code>
						. Only
						<code>href</code>
						and
						<code>src</code>
						attributes with relative paths are eligable for updating. Any
						<code>href</code>
						/
						<code>src</code>
						attributes that contain URLs that begin with an <a
							href="http://en.wikipedia.org/wiki/URI_scheme#Official_IANA-registered_schemes">IANA
							registered scheme</a> or begin with a <b>/</b> will <i>NOT</i> be
						updated by <b>thymus.js</b>. When any
						<code>href</code>
						/
						<code>src</code>
						attributes within a fragment begin with a <a
							href="http://tools.ietf.org/html/rfc3986#section-4.2">protocol-relative
							URL</a> (i.e. <b>//</b>) and the page is being called using a <a
							href="http://en.wikipedia.org/wiki/File_URI_scheme">file URI
							scheme</a> the URL will default to
						<code>http:</code>
						in order to preserve external URL integrity. Here are a few
						examples:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- a page at: http://example.com/my-app/login.htm --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- with a data-thx-context-path=&quot;.&quot; that contains a fragment with a --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;a</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;index.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>...<span style="color: #000080; font-weight: bold">&lt;/a&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- will be result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;a</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;http://example.com/my-app/index.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/a&gt;</span>
</pre></div>

<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- a page at: http://example.com/my-app/user/info.htm --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- with a data-thx-context-path=&quot;../&quot; that contains a fragment with a --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;a</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;index.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>...<span style="color: #000080; font-weight: bold">&lt;/a&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- will be result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;a</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;http://example.com/my-app/index.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/a&gt;</span>
</pre></div>

<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- a page at: http://example.com/my-app/index.htm --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- with a data-thx-context-path=&quot;.&quot; that contains a fragment with a --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;a</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;user/info.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>...<span style="color: #000080; font-weight: bold">&lt;/a&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- will be result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;a</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;http://example.com/my-app/user/info.htm&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/a&gt;</span>
</pre></div>

<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- a page at: file://example.com/my-app/index.htm (notice the file: scheme) --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- with a data-thx-context-path=&quot;.&quot; that contains a fragment with a --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;link</span>
	<span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;//code.jquery.com/ui/jquery-ui-git.css&quot;</span>
	<span style="color: #FF0000">rel=</span><span style="color: #0000FF">&quot;stylesheet&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- will be result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;link</span>
	<span style="color: #FF0000">href=</span><span style="color: #0000FF">&quot;http://code.jquery.com/ui/jquery-ui-git.css&quot;</span>
	<span style="color: #FF0000">rel=</span><span style="color: #0000FF">&quot;stylesheet&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
</pre></div>
					<h3 id="otherfragtargets">Fragment Name/Target Resolution</h3>
					<p>
						Typically,
						<code>data-thx-include</code>
						/
						<code>data-thx-replace</code>
						use the name of the fragment as the target. For instance,
						<code>data-thx-include="frags/nav/nav :: topnav"</code>
						points to a fragment target with a corresponding
						<code>data-thx-fragment="topnav"</code>
						(with <b>topnav</b> being the fragment name/target). The advantage
						of this is that it abstracts any fragment identification away from
						CSS/JS definitions. The disadvantage is that it requires the use
						of separate
						<code>data-thx-fragment</code>
						attributes that are specific to <b>thymus.js</b>. For this reason
						and for selection flexibility <b>thymus.js</b> permits the use of
						additional types of fragment targets.
					</p>
					<h4 id="selfragtargets">JQuery Selector Fragment Targets</h4>
					<p>
						<a href="http://api.jquery.com/category/selectors/">JQuery
							selectors</a> can be used to identify the retrieved fragment's DOM
						element(s) that will be <i>included</i> or <i>replaced</i> within
						the DOM. For example:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/nav/user&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/user/user :: .user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;span&gt;</span>User<span style="color: #000080; font-weight: bold">&lt;/span&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/user/user :: .user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;span&gt;</span>User<span style="color: #000080; font-weight: bold">&lt;/span&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;user&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<p>
						A
						<code>data-thx-replace</code>
						would not make sense if the <i>selector</i> returned more than one
						element (in which case only the last found element would be
						present in the replacement). However, a
						<code>data-thx-include</code>
						with a <i>selector</i> that returns more than one result would:
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/user/user&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;ul</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;users&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;li&gt;</span>User 1<span style="color: #000080; font-weight: bold">&lt;/li&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;li&gt;</span>User 2<span style="color: #000080; font-weight: bold">&lt;/li&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/ul&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;ol</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/user/user :: .users li&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/ol&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;ol</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/user/user :: .users li&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;li&gt;</span>User 1<span style="color: #000080; font-weight: bold">&lt;/li&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;li&gt;</span>User 2<span style="color: #000080; font-weight: bold">&lt;/li&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/ol&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<div class="alert alert-warning">
						<strong>Reminder!</strong> Make sure to escape any quotations that may
						exist in your <i>selector</i>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/user/user :: [class*=&amp;quot;icon-&amp;quot;]&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
</pre></div>
					</div>
					<h4 id="funcfrags">Fragment Target as Function</h4>
					<p>
						Not only can fragment targets contain corresponding
						<code>data-thx-fragment</code>
						names or JQuery <i>selectors</i>, they can also contain a
						<code>function</code>
						references.
					</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text/javascript&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">function</span> handleFrag() {
		<span style="color: #000080; font-weight: bold">var</span> handle = <span style="color: #000080; font-weight: bold">this</span>.handle;
		<span style="color: #000080; font-weight: bold">var</span> newData = handle.data;
		<span style="color: #008800; font-style: italic">// do something with newData then process it</span>
		handle.process(newData);
	}
<span style="color: #000080; font-weight: bold">&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;frags/nav/nav :: handleFrag()&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
</pre></div>
					<div id="fragscompleteevent" class="panel panel-default">
						<div class="panel-heading">
							<h2>Function Result Handle</h2>
						</div>
						<div class="panel-body">
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>source</code>
								</div>
								<div class="col-md-10">the DOM node that contains the
									include/replace definition</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>type</code>
								</div>
								<div class="col-md-10">
									either <b>include</b> or <b>replace</b>
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>data</code>
								</div>
								<div class="col-md-10">
									the <a href="http://api.jquery.com/jQuery.ajax/">JQuery
										AJAX data</a> (result string)
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>status</code>
								</div>
								<div class="col-md-10">
									the <a href="http://api.jquery.com/jQuery.ajax/">JQuery
										AJAX status</a>
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>xhr</code>
								</div>
								<div class="col-md-10">
									the <a href="http://api.jquery.com/jQuery.ajax/">JQuery
										AJAX XHR object</a>
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>process</code>
								</div>
								<div class="col-md-10">
									a
									<code>function</code>
									that will process the <i>inclusion</i> or <i>replacement</i>.
									Arguments:
									<ol>
										<li>the result date (raw or node) that will be <i>included</i>
											or <i>replaced</i> (defaults to the <b>data</b> when <code>null</code>
											or <code>undefined</code>)
										</li>
									</ol>
								</div>
							</div>
							<div class="row row-thymus">
								<div class="col-md-2">
									<code>error</code>
								</div>
								<div class="col-md-10">when an error has occurred outside
									the asynchronous request this will contain the error</div>
							</div>
						</div>
					</div>
					<div class="alert alert-warning">
						<strong>Reminder!</strong> Keep in mind the
						<code>function</code>
						defined as the fragment target must be available for execution at
						the time that the fragment result is returned.
					</div>
					<h2 id="otherfrags">Fragment <code>content-type</code> Resolution</h2>
					<p>
						By default <b>thymus.js</b> assumes that content retrieved for
						fragments have
						<code>text/html</code>
						content, but there are also other types of fragments that are
						supported by <b>thymus.js</b>. Not all of the <a
							href="http://www.iana.org/assignments/media-types">standard
							media types</a> are supported and will cause errors if an attempt is
						made to non-supported content types via <b>thymus.js</b>
					</p>
					<h3 id="textfrags">Raw Fragments</h3>
					<p>
						Fragments that are retrieved that have one of the
						<code>content-type</code>
						definitions below will be treated as raw data
						inclusions/replacements:
					</p>
					<ul>
						<li><code>text/plain</code></li>
						<li><code>application/octet-stream</code></li>
					</ul>
					<p>Because there is no fragment name/target assocaited with the
						returned data it can be ommitted from the inclusion/replcement
						attribute. So, only a URL will remain. Similar to the following:</p>
<div style="overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- the the following replacement --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-replace=</span><span style="color: #0000FF">&quot;user/raw-data.txt&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;h1&gt;</span>Will be replaced.<span style="color: #000080; font-weight: bold">&lt;/h1&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- will result in the following --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	This is the content from raw-data.txt
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- while the following include --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;user/raw-data.txt&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;h1&gt;</span>User Data<span style="color: #000080; font-weight: bold">&lt;/h1&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- will result in the following --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-include=</span><span style="color: #0000FF">&quot;user/raw-data.txt&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;h1&gt;</span>User Data<span style="color: #000080; font-weight: bold">&lt;/h1&gt;</span>
		This is the content from raw-data.txt
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
					<h3 id="xmlfrags">XML Fragments</h3>
					<p>
						Fragments that are retrieved that have one of the XML
						<code>content-type</code>
						definitions below will be... Comming Soon!
					</p>
					<ul>
						<li><code>text/xml</code></li>
						<li><code>application/*+xml</code> (where <b>*</b> is one of
							the <a href="http://www.iana.org/assignments/media-types">standard
								media types</a> for XML)</li>
					</ul>
					<h3 id="jsonfrags">JSON Fragments</h3>
					<p>
						Fragments that are retrieved that have one of the JSON
						<code>content-type</code>
						definitions below will be... Comming Soon!
					</p>
					<ul>
						<li><code>text/json</code></li>
						<li><code>application/*json</code> (where <b>*</b> is one of
							the <a href="http://www.iana.org/assignments/media-types">standard
								media types</a> for JSON)</li>
					</ul>
				</div>
			</div>
			<div id="thymeleaf" class="panel panel-default">
				<div class="panel-heading">
					<h2>
						Thymeleaf Integration
					</h2>
				</div>
				<div class="panel-body app-code">
					<p>
						<a href="http://www.thymeleaf.org/">Thymeleaf</a> is a great
						server-side template engine for Java and is the inspiration behind
						Thymus. In fact, <b>thymus.js</b> can seamlessly be used in
						conjunction with Thymeleaf. A Thymeleaf page can still use the
						default
						<code>data-thx-*</code>
						attributes to process templates via the client that will retreive
						fragments from pre-processed Thymeleaf resources that reside on
						the server. It can also use any of the Thymeleaf template
						attributes (ideal for prototyping Thymeleaf). It will simply pick
						up any of the following attributes that may exist by the time <b>thymus.js</b>
						loads.
					</p>
					<ul>
						<li><code>data-thx-include</code>&dagger;</li>
						<li><code>th:include</code>&Dagger;</li>
						<li><code>data-th-include</code>&Dagger;&bull;</li>
						<li><code>data-thx-replace</code>&dagger;</li>
						<li><code>th:replace</code>&Dagger;</li>
						<li><code>data-th-replace</code>&Dagger;&bull;</li>
						<li><code>data-thx-fragment</code>&dagger;</li>
						<li><code>th:fragment</code>&Dagger;</li>
						<li><code>data-th-fragment</code>&Dagger;&bull;</li>
					</ul>
					<div class="alert alert-info">
						<small>&dagger; denotes <b>thymus.js</b> default
							attributes that will only processed by <b>thymus.js</b> (i.e.
							client side template processing only)
						</small><br /> <small>&Dagger; denotes attributes that will by
							processed by <b>thymus.js</b> if present (i.e. Thymeleaf
							prototyping)
						</small><br /> <small>&bull; requires Thymeleaf 2.1 or higher,
							but can be used with any version of <b>thymus.js</b>
						</small>
					</div>
					<p>
						It's perfectly acceptable to use any combination of the preceeding
						attributes. Any of the Thymeleaf attribues will only be processed
						by <b>thymus.js</b> when Thymeleaf hasn't already processed them.
						To illustrate this concept consider the following:
					</p>
<div style="background: #ffffff; overflow:auto;width:auto;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/head&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;head</span> <span style="color: #FF0000">th:fragment=</span><span style="color: #0000FF">&quot;header&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;link</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&#39;http://fonts.googleapis.com/css?family=Open+Sans&#39;</span>
		<span style="color: #FF0000">rel=</span><span style="color: #0000FF">&#39;stylesheet&#39;</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&#39;text/css&#39;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- assume a resource resides at &quot;frags/nav/nav&quot; --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- that contains the following fragment --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	...
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the current page contains --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;head</span> <span style="color: #FF0000">th:include=</span><span style="color: #0000FF">&quot;frags/head :: header&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span> 
		<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span> <span style="color: #FF0000">data-thx-frag-extension=</span><span style="color: #0000FF">&quot;.htm&quot;</span>
		<span style="color: #FF0000">data-thx-head-frag=</span><span style="color: #0000FF">&quot;th:replace=frags/head :: header&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	...
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-replace=</span><span style="color: #0000FF">&quot;frags/nav/nav :: topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;head</span> <span style="color: #FF0000">th:include=</span><span style="color: #0000FF">&quot;frags/head :: header&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;meta</span> <span style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;script </span><span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymusScript&quot;</span> 
		<span style="color: #FF0000">data-thx-context-path=</span><span style="color: #0000FF">&quot;.&quot;</span> <span style="color: #FF0000">data-thx-frag-extension=</span><span style="color: #0000FF">&quot;.htm&quot;</span>
		<span style="color: #FF0000">data-thx-head-frag=</span><span style="color: #0000FF">&quot;th:include=frags/head :: header&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;link</span> <span style="color: #FF0000">href=</span><span style="color: #0000FF">&#39;http://fonts.googleapis.com/css?family=Open+Sans&#39;</span>
		<span style="color: #FF0000">rel=</span><span style="color: #0000FF">&#39;stylesheet&#39;</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&#39;text/css&#39;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;body&gt;</span>
	...
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-thx-fragment=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/body&gt;</span>
</pre></div>
					<p>
						The example uses
						<code>th:include</code>
						syntax for the
						<code>head</code>
						that will only be proccessed by Thymeleaf when the page is ran
						through the Thymeleaf engine. If it's not ran though the Thymeleaf
						engine it will be picked up by <b>thymus.js</b> and processed
						accordingly. On the other hand, the
						<code>div</code>
						that contains the
						<code>data-thx-replace</code>
						will always be processed by <b>thymus.js</b> regardless of prior
						Thymeleaf processing.
					</p>
					<div class="alert alert-success">
						<strong>Tip:</strong> To ensure that <b>thymus.js</b> is ran in a
						strickly prototyping mode (i.e. never ran on a client where
						Thymeleaf is running on the server), simply add a
						<code>th:remove</code>
						attribute to the <b>thymus.js</b>
						<code>script</code>
						tag or wrap the <b>thymus.js</b>
						<code>script</code>
						tag in
						<code>head</code>
						tag that has a
						<code>th:replace</code>
						attribute.
					</div>
				</div>
			</div>
		</section>
	</div>
	<div th:replace="frags/nav/nav :: bottomnav"></div>
	<div th:replace="frags/script :: scripts"></div>
</body>
</html>